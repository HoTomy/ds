{
  "version": 3,
  "sources": ["../../models/dogs.ts"],
  "sourcesContent": ["import * as db from '../helpers/database';\n\nexport const getById = async (id: any) => {\n  let query = 'SELECT * FROM dogs WHERE ID = ?';\n  let values = [id];\n  let data = await db.run_query(query, values);\n  return data;\n}\n\nexport const getAll = async() => {\n  let query = 'SELECT * FROM dogs order by id';\n  let data = await db.run_query(query, null);\n  return data;\n}\n\n\nexport const add = async (dog: any) => {\n    let keys = Object.keys(dog);\n    let values = Object.values(dog);\n    let key = keys.join(',');\n    let param = '';\n    for(let i: number=0; i<values.length; i++){ param +='?,'}\n    param=param.slice(0,-1);\n    let query = `INSERT INTO dogs (${key}) VALUES (${param})`;\n    try{\n      await db.run_insert(query, values);\n      return {status: 201};\n    } catch(err: any) {\n      return err;\n    }\n}\n\nexport const updateById = async (dog: any , id: any) => {\n    let aid = [id];\n    let keys = Object.keys(dog);\n    let values = Object.values(dog);\n    let param = '';\n  for (let i: number = 0; i < values.length; i++) {\n param += `${keys[i]}= '${values[i]}',`\n  }\n param = param.slice(0, -1);\n    let query = `UPDATE dogs SET ${param} WHERE id = ?`;\n      try{\n        await db.run_update(query, aid);\n        return { status: 201 };\n      } catch(err: any) {\n        return err;                                             \n      }\n}\n\nexport const deleteById = async (id: any) => {\n    let values = [id];\n    let query =  `DELETE FROM dogs WHERE id='${values}';`\n\n    try{\n        await db.run_delete(query, values);\n        return { status: 201 };\n    } catch(err: any) {\n        return err;                                              \n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AAEb,MAAM,UAAU,OAAO,OAAY;AACxC,MAAI,QAAQ;AACZ,MAAI,SAAS,CAAC,EAAE;AAChB,MAAI,OAAO,MAAM,GAAG,UAAU,OAAO,MAAM;AAC3C,SAAO;AACT;AAEO,MAAM,SAAS,YAAW;AAC/B,MAAI,QAAQ;AACZ,MAAI,OAAO,MAAM,GAAG,UAAU,OAAO,IAAI;AACzC,SAAO;AACT;AAGO,MAAM,MAAM,OAAO,QAAa;AACnC,MAAI,OAAO,OAAO,KAAK,GAAG;AAC1B,MAAI,SAAS,OAAO,OAAO,GAAG;AAC9B,MAAI,MAAM,KAAK,KAAK,GAAG;AACvB,MAAI,QAAQ;AACZ,WAAQ,IAAU,GAAG,IAAE,OAAO,QAAQ,KAAI;AAAE,aAAQ;AAAA,EAAI;AACxD,UAAM,MAAM,MAAM,GAAE,EAAE;AACtB,MAAI,QAAQ,qBAAqB,gBAAgB;AACjD,MAAG;AACD,UAAM,GAAG,WAAW,OAAO,MAAM;AACjC,WAAO,EAAC,QAAQ,IAAG;AAAA,EACrB,SAAQ,KAAN;AACA,WAAO;AAAA,EACT;AACJ;AAEO,MAAM,aAAa,OAAO,KAAW,OAAY;AACpD,MAAI,MAAM,CAAC,EAAE;AACb,MAAI,OAAO,OAAO,KAAK,GAAG;AAC1B,MAAI,SAAS,OAAO,OAAO,GAAG;AAC9B,MAAI,QAAQ;AACd,WAAS,IAAY,GAAG,IAAI,OAAO,QAAQ,KAAK;AACjD,aAAS,GAAG,KAAK,QAAQ,OAAO;AAAA,EAC/B;AACD,UAAQ,MAAM,MAAM,GAAG,EAAE;AACtB,MAAI,QAAQ,mBAAmB;AAC7B,MAAG;AACD,UAAM,GAAG,WAAW,OAAO,GAAG;AAC9B,WAAO,EAAE,QAAQ,IAAI;AAAA,EACvB,SAAQ,KAAN;AACA,WAAO;AAAA,EACT;AACN;AAEO,MAAM,aAAa,OAAO,OAAY;AACzC,MAAI,SAAS,CAAC,EAAE;AAChB,MAAI,QAAS,8BAA8B;AAE3C,MAAG;AACC,UAAM,GAAG,WAAW,OAAO,MAAM;AACjC,WAAO,EAAE,QAAQ,IAAI;AAAA,EACzB,SAAQ,KAAN;AACE,WAAO;AAAA,EACX;AACJ;",
  "names": []
}
